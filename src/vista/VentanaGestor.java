/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import InterfacesVistas.VistaGestor;
import controladores.ControladorVistaGestor;
import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Gestor;
import modelo.Pedido;

/**
 *
 * @author GerÃ³nimo
 */
public class VentanaGestor extends javax.swing.JFrame implements VistaGestor {

    private Gestor gestor;
    private ControladorVistaGestor controlador;
    private DefaultTableModel modeloTabla;
    private DefaultListModel modeloLista = new DefaultListModel();
    private Pedido pedidoSeleccionadoLista;
    private Pedido pedidoSeleccionadoTabla;

    public VentanaGestor(Gestor gestor) {
        initComponents();
        setLocationRelativeTo(null);
        this.gestor = gestor;
        this.setTitle("Ventana gestor | Gestor: " + gestor.getNombreCompleto());
        this.lInfoGestor.setText("Gestor: " + gestor.getNombreCompleto() + " | Unidad Procesadora: " + gestor.getUnidad().getNombre());
        this.lPedidos.setCellRenderer(new RenderizadorPedidos());
        this.lPedidos.setModel(modeloLista);
        modeloTabla = new DefaultTableModel(
                new Object[]{"Pedido", "Item", "Comentario", "Cliente", "Fecha y hora", "Estado"},
                0 // cantidad de filas inicial
        );
        tPedidos.setModel(modeloTabla);
        tPedidos.getColumnModel().getColumn(0).setMinWidth(0);
        tPedidos.getColumnModel().getColumn(0).setMaxWidth(0);
        tPedidos.getColumnModel().getColumn(0).setWidth(0);
        tPedidos.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int filaSeleccionada = tPedidos.getSelectedRow();
                if (filaSeleccionada != -1) {
                    Object valor = tPedidos.getValueAt(filaSeleccionada, 0);
                    pedidoSeleccionadoTabla = (Pedido) valor;
                }
            }
        });
        this.controlador = new ControladorVistaGestor(gestor, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lInfoGestor = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lPedidos = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        bTomarPedido = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tPedidos = new javax.swing.JTable();
        bFinalizarPedido = new javax.swing.JButton();
        bEntregarPedido = new javax.swing.JButton();
        lMensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lInfoGestor.setText("Info del gestor");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lPedidos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lPedidosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lPedidos);

        jLabel1.setText("Pedidos confirmados:");

        bTomarPedido.setText("Tomar pedido");
        bTomarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTomarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bTomarPedido)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bTomarPedido)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tPedidos);

        bFinalizarPedido.setText("Finalizar pedido");
        bFinalizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFinalizarPedidoActionPerformed(evt);
            }
        });

        bEntregarPedido.setText("Entregar pedido");
        bEntregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEntregarPedidoActionPerformed(evt);
            }
        });

        lMensaje.setText("Mensaje");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lMensaje)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bFinalizarPedido)
                                .addGap(18, 18, 18)
                                .addComponent(bEntregarPedido)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lInfoGestor, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lInfoGestor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bFinalizarPedido)
                    .addComponent(bEntregarPedido)
                    .addComponent(lMensaje))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bTomarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTomarPedidoActionPerformed
        controlador.tomarPedido(pedidoSeleccionadoLista);
    }//GEN-LAST:event_bTomarPedidoActionPerformed

    private void lPedidosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lPedidosValueChanged
        if (!evt.getValueIsAdjusting()) {
            this.pedidoSeleccionadoLista = (Pedido) lPedidos.getSelectedValue();
        }
    }//GEN-LAST:event_lPedidosValueChanged

    private void bFinalizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFinalizarPedidoActionPerformed
        controlador.finalizarPedido(pedidoSeleccionadoTabla);
    }//GEN-LAST:event_bFinalizarPedidoActionPerformed

    private void bEntregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEntregarPedidoActionPerformed
        controlador.entregarPedido(pedidoSeleccionadoTabla);
    }//GEN-LAST:event_bEntregarPedidoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controlador.cerrarSesion(this.gestor);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public void actualizarPedidos(List<Pedido> pedidosConfirmados) {
        lPedidos.setListData(pedidosConfirmados.toArray(new Pedido[pedidosConfirmados.size()]));
    }

    public void mensajeError(String error) {
        this.lMensaje.setText(error);
    }

    public void cargarPedidoTabla(List<Pedido> pedidos) {
        modeloTabla.setRowCount(0);
        for (Pedido pedido : pedidos) {
            Object[] fila = new Object[]{
                pedido, // Columna 0 oculta
                pedido.getItem().getNombre(),
                pedido.getComentario(),
                pedido.getCliente().getNombreCompleto(),
                pedido.getFecha(), // o formateado con DateTimeFormatter
                pedido.getEstado().getNombre()
            };
            modeloTabla.addRow(fila);
        }
    }

    public void borrarPedidos() {
        if (modeloLista != null) {
            modeloLista.clear();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEntregarPedido;
    private javax.swing.JButton bFinalizarPedido;
    private javax.swing.JButton bTomarPedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lInfoGestor;
    private javax.swing.JLabel lMensaje;
    private javax.swing.JList lPedidos;
    private javax.swing.JTable tPedidos;
    // End of variables declaration//GEN-END:variables

    private class RenderizadorPedidos implements ListCellRenderer<Pedido> {

        @Override
        public Component getListCellRendererComponent(JList<? extends Pedido> list, Pedido pedido, int index, boolean isSelected, boolean cellHasFocus) {
            JLabel label = new JLabel();
            label.setText(pedido.getItem().getNombre() + " - Cliente: " + pedido.getCliente().getNombreCompleto() + " - " + pedido.getFecha());

            if (isSelected) {
                label.setForeground(Color.blue);
            } else {
                label.setForeground(Color.black);
            }

            return label;
        }

    }
}
